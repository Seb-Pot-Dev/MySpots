
{% extends 'base.html.twig' %}

{% block title %}Hello SpotController!{% endblock %}

{% block body %}
<link rel="stylesheet" href="{{ asset('css/showSpot.css') }}">
<link rel="stylesheet" href="{{ asset('css/carrousel.css') }}">
<link rel="stylesheet" href="{{ asset('css/buttons.css') }}">
<link rel="stylesheet" href="{{ asset('css/forms.css') }}">

<!--nom du spot-->
<h1>{{ spot.name }} par 
{% if spot.author == null %}
    <p>Inconnu</p> 
{% else %}
    {{ spot.author.pseudo }}
{% endif %}
</h1>
<!-- Affichage couvert ou non -->
Environnement : 
{% if spot.isCovered == 0 %}
    Non-couvert
{% else %}
    Couvert
{% endif %}
<br>
<!-- Affichage officiel ou non -->
Type : 
{% if spot.isOfficial == 0 %}
    Street
{% else %}
    Skatepark
{% endif %}
<!--affichage note du spot-->
<p>Note : 
    {% if spot.avgNote %}

<!-- Affichage des étoiles -->
    {# Définition des variables #}
    {% set avgNote = spot.avgNote %}
    {% set fullStarsCount = avgNote | round  %}
    {% set avgNoteRoundedLow = avgNote | number_format(0, '.', '', 'floor') %}
    {% set remainder = avgNote - avgNoteRoundedLow %}
    {% set starsDisplayed = fullStarsCount + (remainder >= 0.25 ? 1 : 0) %}
    {% set emptyStarsCount = 5 - starsDisplayed %}

{# Fix la génération de demi étoile, lorsque que avgNote entre .25 et .75, affiché demi étoile. 
En dessous, etoile vide
Au dessus, etoile pleine 
#}
    {# Boucle sur les étoiles pleines #}
    {% for i in 1..fullStarsCount %}
        <i class="fa-solid fa-star"></i>
    {% endfor %}
    {# Affichage d'une demi etoile ou d'une étoile pleine selon la note #}
    {% if remainder >= 0.25 and remainder < 0.75 %}
        <i class="fa-solid fa-star-half-stroke"></i>
    {% elseif remainder >= 0.75 %}
        <i class="fa-solid fa-star"></i>
    {% endif %}

    {% if emptyStarsCount > 0 %}
    {% for i in 1..emptyStarsCount %}
        <i class="fa-regular fa-star"></i>
    {% endfor %}
    {% endif %}




    <!--affichage de la avgNote-->
    ({{spot.avgNote|number_format(2, '.', '')}})
    ({{spot.notations|length}} évaluations)
    {% else %}
    Pas encore de avgNote
    {% endif %}
</p>

{# Attribuer une note #}
{% if app.user %}
<!--form note du spot -->
{{ form(formNotation) }}
{% endif %}
{# Si l'utilisateur a déjà noté ce spot: message d'erreur #}
{% for message in app.flashes('info') %}
    <div class="alert alert-info">
        {{ message }}
    </div>
{% endfor %}

<!--nombre de like du spot-->
<p>Nombre de like : {{ spot.favoritedByUsers | length }} </p>
            
{% if app.user %}
{{ form_start(formPicture) }}
    {{ form_label(formPicture)}}
{{ form_end(formPicture) }}
{% endif %}

{# ****** #}
{% if spot.pictures|length > 0 %}

<!-- carrousel -->
<div id="carrousel">
    <div id="carrouselContainer">
    </div>

<svg height="800px" width="800px" version="1.1" class="bouton-carrousel" id="boutonCarrouselGauche" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 viewBox="0 0 185.343 185.343" xml:space="preserve">
<g>
	<g>
		<path style="fill:#010002;" d="M51.707,185.343c-2.741,0-5.493-1.044-7.593-3.149c-4.194-4.194-4.194-10.981,0-15.175
			l74.352-74.347L44.114,18.32c-4.194-4.194-4.194-10.987,0-15.175c4.194-4.194,10.987-4.194,15.18,0l81.934,81.934
			c4.194,4.194,4.194,10.987,0,15.175l-81.934,81.939C57.201,184.293,54.454,185.343,51.707,185.343z"/>
	</g>
</g>
</svg>

<svg height="800px" width="800px" version="1.1" class="bouton-carrousel" id="boutonCarrouselDroite" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 viewBox="0 0 185.343 185.343" xml:space="preserve">
<g>
	<g>
		<path style="fill:#010002;" d="M51.707,185.343c-2.741,0-5.493-1.044-7.593-3.149c-4.194-4.194-4.194-10.981,0-15.175
			l74.352-74.347L44.114,18.32c-4.194-4.194-4.194-10.987,0-15.175c4.194-4.194,10.987-4.194,15.18,0l81.934,81.934
			c4.194,4.194,4.194,10.987,0,15.175l-81.934,81.939C57.201,184.293,54.454,185.343,51.707,185.343z"/>
	</g>
</g>
</svg>
</div>
{% include 'component/_carrousel.html.twig' %}

{% else %}
    <p class="text-red-500">Il n'y a pas encore de photos pour ce spot</p>
{% endif %}

<!--description du spot-->
<p>Description: {{ spot.description }}</p>

<!--ressources du spot-->
<h4>Ressources sur place:</h4>
{% if spot.modules|length >= 1 %}
<ul>
{% for module in spot.modules %}
    <li> {{ module.name }} </li>
{% endfor %}
</ul>
{% else %}
Les informations concernant les ressources de ce spot n'ont pas encore été renseignées.
{% endif %}

<!--commentaires du spot-->
<h4>Commentaires:</h4>
{% if spot.comments|length >= 1 %}
    <!-- boucle sur les commentaires du spot, triés par date -->
    {% for comment in spot.comments|sort((a, b)=>a.date<=>b.date) %}
    <div class="comment-box">
        <div class="comment-author-and-date">
        {# Si l'auteur du commentaire n'as pas supprimé son compte #}
        {% if comment.author is not same as null %}
            {{comment.author.pseudo}}
        {% else %}
            <p>Inconnu</p>
        {% endif %}
        {{comment.date|date('d/m/y H:i:s')}}
        </div>
        <div class="comment-content">
        {{comment.content}}
        </div>
    </div>
    {% endfor %}
{% else %}
<p>Pas encore de commentaire sur ce spot</p>
{% endif %}

{% if app.user %}
{{ form(formCommentSpot) }}
{% else %}
<p>Veuillez vous connecter pour pouvoir commenter un spot.</p>
{% endif %}
</div>


{% endblock %}